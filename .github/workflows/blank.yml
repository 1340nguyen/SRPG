

(function() {

//   Processing to obtain the total weight by adding the weight of the belongings
AbilityCalculator._getPossesionItemGrossWeight　= function(unit) {
	var i, item, count;
	var value = 0;
	
	count = UnitItemControl.getPossessionItemCount(unit);
	
	for (i = 0; i < count; i++) {
		item = UnitItemControl.getItem(unit, i);
		if (item !== null) {
			value += item.getWeight();
		}
	}
	
	return value;
};


// Subtraction method 1 Subtract total weight of inventory from Agility
// This method tends to make weight a heavy burden on agility in games that expect units to have multiple weapons and tools (which is probably the majority of games).
 AbilityCalculator.getAvoid= function(unit, weapon) {
	var avoid, value, param;
	var spd = RealBonus.getSpd(unit);
	
	// 通常、敏捷は速さと同一
	avoid = (spd * 2);
	
	//  Dexterity is unchanged if no weapon is specified or weight is not taken into account
	if (weapon === null || !DataConfig.isItemWeightDisplayable()) {
		return avoid;
	}
	
	//  If physique is valid, judge by physique, otherwise judge by power (magic power)
	if (DataConfig.isBuildDisplayable()) {
		param = ParamBonus.getStr(unit) + ParamBonus.getMag(unit);
	}
	else {
		if (Miscellaneous.isPhysicsBattle(weapon)) {
			param = ParamBonus.getStr(unit) + ParamBonus.getMag(unit) ;
		}
		else {
			param = ParamBonus.getStr(unit) + ParamBonus.getMag(unit) ;
		}
	}
		
//	value = weapon.getWeight() - param;
	//  Calculate the total weight by adding all the weights of your belongings
	value = this._getPossesionItemGrossWeight(unit) - param;
		
	if (value > 0) {
		// If the parameter is lower than the weight, lower the agility by the difference
		avoid = value;
	}
		
	return avoid;
};


})();
